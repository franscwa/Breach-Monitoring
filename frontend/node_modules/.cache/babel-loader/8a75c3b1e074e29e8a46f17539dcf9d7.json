{"ast":null,"code":"var _jsxFileName = \"/Users/francisco/Developer/Personal Projects/Cred Mon/frontend/src/App.js\";\n\n/*\nimport React from 'react';\nimport axios from 'axios';\n\nconst getData = () => {\n  axios.get('https://jsonplaceholder.typicode.com/posts')\n      .then(res => {\n        const data = res.data;\n        this.setState({ data });\n      })\n}\n\nconst Table = () => {\n  return (\n      <table>\n        <thead>\n        <tr>\n          <th>User Id</th>\n          <th>Id</th>\n          <th>Title</th>\n          <th>Body</th>\n        </tr>\n        </thead>\n        <tbody>\n        {this.state.data.map(post =>\n            <tr key={post.id}>\n              <td>{post.userId}</td>\n              <td>{post.id}</td>\n              <td>{post.title}</td>\n              <td>{post.body}</td>\n            </tr>\n        )}\n        </tbody>\n      </table>\n  )\n}\nexport default App;*/\nimport React from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getDataFromDb = () => {\n      fetch(\"http://localhost:3001/api/getData\").then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n\n    this.putDataToDB = message => {\n      let currentIds = this.state.data.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        message: message\n      });\n    };\n\n    this.deleteFromDB = idTodelete => {\n      let objIdToDelete = null;\n      this.state.data.forEach(dat => {\n        if (dat.id == idTodelete) {\n          objIdToDelete = dat._id;\n        }\n      });\n      axios.delete(\"http://localhost:3001/api/deleteData\", {\n        data: {\n          id: objIdToDelete\n        }\n      });\n    };\n\n    this.updateDB = (idToUpdate, updateToApply) => {\n      let objIdToUpdate = null;\n      this.state.data.forEach(dat => {\n        if (dat.id == idToUpdate) {\n          objIdToUpdate = dat._id;\n        }\n      });\n      axios.post(\"http://localhost:3001/api/updateData\", {\n        id: objIdToUpdate,\n        update: {\n          message: updateToApply\n        }\n      });\n    };\n\n    this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.length <= 0 ? \"NO DB ENTRIES YET\" : data.map(dat => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"gray\"\n            },\n            children: \" id: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this), \" \", dat.id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 87\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"gray\"\n            },\n            children: \" data: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this), dat.message]\n        }, data.message, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => this.setState({\n            message: e.target.value\n          }),\n          placeholder: \"add something in the database\",\n          style: {\n            width: \"200px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.putDataToDB(this.state.message),\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            width: \"200px\"\n          },\n          onChange: e => this.setState({\n            idToDelete: e.target.value\n          }),\n          placeholder: \"put id of item to delete here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.deleteFromDB(this.state.idToDelete),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            width: \"200px\"\n          },\n          onChange: e => this.setState({\n            idToUpdate: e.target.value\n          }),\n          placeholder: \"id of item to update here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            width: \"200px\"\n          },\n          onChange: e => this.setState({\n            updateToApply: e.target.value\n          }),\n          placeholder: \"put new value of the item here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.updateDB(this.state.idToUpdate, this.state.updateToApply),\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;\ns;","map":{"version":3,"names":["React","axios","App","Component","constructor","props","getDataFromDb","fetch","then","data","json","res","setState","putDataToDB","message","currentIds","state","map","id","idToBeAdded","includes","post","deleteFromDB","idTodelete","objIdToDelete","forEach","dat","_id","delete","updateDB","idToUpdate","updateToApply","objIdToUpdate","update","intervalIsSet","idToDelete","objectToUpdate","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render","length","padding","color","e","target","value","width","s"],"sources":["/Users/francisco/Developer/Personal Projects/Cred Mon/frontend/src/App.js"],"sourcesContent":["/*\nimport React from 'react';\nimport axios from 'axios';\n\nconst getData = () => {\n  axios.get('https://jsonplaceholder.typicode.com/posts')\n      .then(res => {\n        const data = res.data;\n        this.setState({ data });\n      })\n}\n\nconst Table = () => {\n  return (\n      <table>\n        <thead>\n        <tr>\n          <th>User Id</th>\n          <th>Id</th>\n          <th>Title</th>\n          <th>Body</th>\n        </tr>\n        </thead>\n        <tbody>\n        {this.state.data.map(post =>\n            <tr key={post.id}>\n              <td>{post.userId}</td>\n              <td>{post.id}</td>\n              <td>{post.title}</td>\n              <td>{post.body}</td>\n            </tr>\n        )}\n        </tbody>\n      </table>\n  )\n}\nexport default App;*/\n\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            id: 0,\n            message: null,\n            intervalIsSet: false,\n            idToDelete: null,\n            idToUpdate: null,\n            objectToUpdate: null\n        };\n    }\n\n    componentDidMount() {\n        this.getDataFromDb();\n        if (!this.state.intervalIsSet) {\n            let interval = setInterval(this.getDataFromDb, 1000);\n            this.setState({ intervalIsSet: interval });\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.state.intervalIsSet) {\n            clearInterval(this.state.intervalIsSet);\n            this.setState({ intervalIsSet: null });\n        }\n    }\n\n    getDataFromDb = () => {\n        fetch(\"http://localhost:3001/api/getData\")\n            .then(data => data.json())\n            .then(res => this.setState({ data: res.data }));\n    };\n\n    putDataToDB = message => {\n        let currentIds = this.state.data.map(data => data.id);\n        let idToBeAdded = 0;\n        while (currentIds.includes(idToBeAdded)) {\n            ++idToBeAdded;\n        }\n\n        axios.post(\"http://localhost:3001/api/putData\", {\n            id: idToBeAdded,\n            message: message\n        });\n    };\n\n    deleteFromDB = idTodelete => {\n        let objIdToDelete = null;\n        this.state.data.forEach(dat => {\n            if (dat.id == idTodelete) {\n                objIdToDelete = dat._id;\n            }\n        });\n\n        axios.delete(\"http://localhost:3001/api/deleteData\", {\n            data: {\n                id: objIdToDelete\n            }\n        });\n    };\n\n    updateDB = (idToUpdate, updateToApply) => {\n        let objIdToUpdate = null;\n        this.state.data.forEach(dat => {\n            if (dat.id == idToUpdate) {\n                objIdToUpdate = dat._id;\n            }\n        });\n\n        axios.post(\"http://localhost:3001/api/updateData\", {\n            id: objIdToUpdate,\n            update: { message: updateToApply }\n        });\n    };\n\n    render() {\n        const { data } = this.state;\n        return (\n            <div>\n                <ul>\n                    {data.length <= 0\n                        ? \"NO DB ENTRIES YET\"\n                        : data.map(dat => (\n                            <li style={{ padding: \"10px\" }} key={data.message}>\n                                <span style={{ color: \"gray\" }}> id: </span> {dat.id} <br />\n                                <span style={{ color: \"gray\" }}> data: </span>\n                                {dat.message}\n                            </li>\n                        ))}\n                </ul>\n                <div style={{ padding: \"10px\" }}>\n                    <input\n                        type=\"text\"\n                        onChange={e => this.setState({ message: e.target.value })}\n                        placeholder=\"add something in the database\"\n                        style={{ width: \"200px\" }}\n                    />\n                    <button onClick={() => this.putDataToDB(this.state.message)}>\n                        ADD\n                    </button>\n                </div>\n                <div style={{ padding: \"10px\" }}>\n                    <input\n                        type=\"text\"\n                        style={{ width: \"200px\" }}\n                        onChange={e => this.setState({ idToDelete: e.target.value })}\n                        placeholder=\"put id of item to delete here\"\n                    />\n                    <button onClick={() => this.deleteFromDB(this.state.idToDelete)}>\n                        DELETE\n                    </button>\n                </div>\n                <div style={{ padding: \"10px\" }}>\n                    <input\n                        type=\"text\"\n                        style={{ width: \"200px\" }}\n                        onChange={e => this.setState({ idToUpdate: e.target.value })}\n                        placeholder=\"id of item to update here\"\n                    />\n                    <input\n                        type=\"text\"\n                        style={{ width: \"200px\" }}\n                        onChange={e => this.setState({ updateToApply: e.target.value })}\n                        placeholder=\"put new value of the item here\"\n                    />\n                    <button\n                        onClick={() =>\n                            this.updateDB(this.state.idToUpdate, this.state.updateToApply)\n                        }\n                    >\n                        UPDATE\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;s"],"mappings":"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"},"metadata":{},"sourceType":"module"}